// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package entity

const TableNameAccountUserZone = "account_user_zone"

// AccountUserZone 群组
type AccountUserZone struct {
	ZoneID         int32  `gorm:"column:zone_id;primaryKey;autoIncrement:true;comment:好友组编号" json:"zone_id"`                               // 好友组编号
	ZoneName       string `gorm:"column:zone_name;not null;comment:群组名称" json:"zone_name"`                                                 // 群组名称
	ZoneType       int32  `gorm:"column:zone_type;not null;comment:群组类型(ENUM):0-临时组上限100人;  1-普通组上限300人; 2-VIP组 上限500人" json:"zone_type"`  // 群组类型(ENUM):0-临时组上限100人;  1-普通组上限300人; 2-VIP组 上限500人
	ZonePermission int32  `gorm:"column:zone_permission;not null;comment:申请加入模式(ENUM): 0-默认直接加入; 1-需要身份验证; 2-私有群组" json:"zone_permission"` // 申请加入模式(ENUM): 0-默认直接加入; 1-需要身份验证; 2-私有群组
	ZoneDeclared   string `gorm:"column:zone_declared;not null;comment:群组公告" json:"zone_declared"`                                         // 群组公告
	UserID         int32  `gorm:"column:user_id;not null;comment:管理员" json:"user_id"`                                                      // 管理员
	ZoneBindID     string `gorm:"column:zone_bind_id;not null;comment:第三方群组编号" json:"zone_bind_id"`                                        // 第三方群组编号
	ZoneUserNum    int32  `gorm:"column:zone_user_num;not null;default:2;comment:人数" json:"zone_user_num"`                                 // 人数
}

// TableName AccountUserZone's table name
func (*AccountUserZone) TableName() string {
	return TableNameAccountUserZone
}
